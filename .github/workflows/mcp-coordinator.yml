name: MCP Server Coordinator

on:
  schedule:
    - cron: '*/20 * * * *'  # Every 20 minutes
  workflow_dispatch:
  issues:
    types: [opened, labeled]

permissions:
  contents: read
  issues: write

jobs:
  monitor_mcp_issues:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install PyGithub
      
      - name: Run MCP Server Coordinator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python agents/mcp_server_coordinator.py
  
  respond_to_direct_issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - uses: actions/checkout@v4
      
      - name: Check if MCP-related
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = (issue.body || '').toLowerCase();
            
            const mcpKeywords = ['mcp', 'server', 'docker', 'permission', 'connection', 'api'];
            const isMcpRelated = mcpKeywords.some(keyword => 
              title.includes(keyword) || body.includes(keyword)
            );
            
            if (isMcpRelated) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸ”§ **MCP Server Coordinator Alert**\n\nI've detected this is an MCP-related issue. The MCP Server Coordinator will analyze and respond shortly.\n\n---\n*Automated detection*`
              });
            }